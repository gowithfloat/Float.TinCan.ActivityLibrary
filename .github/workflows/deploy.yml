name: Deploy

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Retore Workload
        run: dotnet workload restore
      - name: Restore dependencies
        run: dotnet restore
      - name: Prepare assembly version
        id: version
        run: |
          VERSION=${{ github.event.release.name }}
          echo "assembly=${VERSION%-*}.${{ github.run_number }}" >> "$GITHUB_OUTPUT"
      - name: Update project version
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "**/*.csproj"
          version: ${{ github.event.release.name }}
      - name: Update assembly version
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "**/AssemblyInfo.cs"
          version: ${{ steps.version.outputs.assembly }}
      - name: Build Library
        run: dotnet build ./Float.TinCan.ActivityLibrary/Float.TinCan.ActivityLibrary.csproj --configuration Release --no-restore
      - name: Pack
        run: dotnet pack --configuration Release --no-restore
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: Float.TinCan.ActivityLibrary.${{ github.event.release.name }}.nupkg
          path: ./Float.TinCan.ActivityLibrary/bin/Release/Float.TinCan.ActivityLibrary.${{ github.event.release.name }}.nupkg
          if-no-files-found: error
      - name: Deploy to NuGet
        env:
          FLOAT_NUGET_TOKEN: ${{ secrets.FLOAT_NUGET_TOKEN }}
        run: dotnet nuget push ./Float.TinCan.ActivityLibrary/bin/Release/Float.TinCan.ActivityLibrary.${{ github.event.release.name }}.nupkg --api-key "${FLOAT_NUGET_TOKEN}" --source https://api.nuget.org/v3/index.json
